<!--  TODO : Window 화면 뷰 (AISParamsBoardV.xaml) 창 크기(Width, Height) 고정 구현(ResizeMode="NoResize") (2023.10.12 jbh) -->
<!--  참고 URL - https://salmonworld.tistory.com/164  -->
<Window x:Class="RevitBoxSeumteo.Views.Windows.AISParamsBoardV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:RevitBoxSeumteo.Views.Windows"
        xmlns:vm="clr-namespace:RevitBoxSeumteo.ViewModels.Windows"
        d:DataContext="{d:DesignInstance vm:AISParamsBoardVM}"
        mc:Ignorable="d"
        Width="765"
        Height="460"
        ResizeMode="NoResize"
        Title="테스트_AIS_매개변수 관리"
        d:DesignHeight="450" d:DesignWidth="800">
    <!--  TODO : 화면 뷰 "AISParamsBoardV.xaml"에 뷰모델 "AISParamsBoardVM.cs"을 바인딩할 수 있도록 <Window.DataContext> 사용 (2023.10.6 jbh) -->
    <Window.DataContext>
        <vm:AISParamsBoardVM />
    </Window.DataContext>

    <Grid>
        <DockPanel>
            <!-- 화면 상단 Border 영역 -->
            <Border Height="50" DockPanel.Dock="Top" BorderBrush="Red" BorderThickness="5">
                <!--  TODO : StackPanel 영역 안에 존재하는 Button이 화면에서 짤리지 않게끔 다시 구현하기 (2023.10.10 jbh) -->
                <StackPanel Height="40" Orientation="Horizontal" HorizontalAlignment="Right">
                    <DockPanel Margin="0,5,0,5">
                        <!--  TODO : 멀티 콤보박스(Multi ComboBox) 구현 (2023.11.16 jbh)  -->
                        <!--  참고 URL - https://m.blog.naver.com/goldrushing/221230210966  -->
                        <!--  TODO : Text="카테고리 :" 문자열 값 수정 불가 처리 하기 위해 TextBox 대신 TextBlock으로 구현 (2023.10.16 jbh) -->
                        <TextBlock Text="카테고리 :" Width="60" Height="20" />
                        <ComboBox x:Name="ParamsType" 
                                  Margin="10,0,0,0" 
                                  Width="100" 
                                  Height="20"
                                  ItemsSource="{Binding ParamsTypeList}"
                                  DisplayMemberPath="DivName"
                                  SelectedValuePath="DivCode"
                                  SelectedItem="{Binding SelectedParamsType}" />
                        
                        <!--  TODO : 멀티 콤보박스(Multi ComboBox) 구현 (2023.11.16 jbh)  -->
                        <!--  참고 URL - https://m.blog.naver.com/goldrushing/221230210966  -->
                        <!--  TODO : Text="속성값 필터 :" 문자열 값 수정 불가 처리 하기 위해 TextBox 대신 TextBlock으로 구현 (2023.10.16 jbh) -->
                        <TextBlock Text="속성값 필터 :" Margin="50,0,0,0" Width="80" Height="20"/>
                        <ComboBox x:Name="ParamsValue" 
                                  Margin="10,0,0,0" 
                                  Width="100" 
                                  Height="20" 
                                  ItemsSource="{Binding ParamsValueList}" 
                                  DisplayMemberPath="SubDivName"
                                  SelectedValuePath="SubDivCode"
                                  SelectedItem="{Binding SelectedParamsValue}"/>

                        <TextBlock Margin="10,0,0,0" 
                                   Width="110" 
                                   VerticalAlignment="Center"
                                   Text="{Binding SeletedText}"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   TextAlignment="Center" />

                        <Button Command="{Binding SearchCommand}" CommandParameter="" Margin="110,0,10,0" Width="80" Height="20">검색</Button>
                    </DockPanel>
                    
                    <!--  TODO : 에버노트 자료 "[개발_업무] [UniBizBO_UniBizSM_모든_전체_페이지_뷰모델_사용되는_메서드_InitControl_SetParamBackup_SetParam2InitControlParam_기능_역할_설명_자료_오류_해결_방법] 2023_03_23" 참고해서 ComboBox 구현하기 (2023.10.10 jbh) -->       
                    <!--<ComboBox x:Name="CategoryType" 
                               DisplayMemberPath="comm_TypeNoMemo"
                               IsReadOnly="True"
                               ItemsSource="{Binding App.Sys.CommonCodes, Converter={x:Static converter:CommonCodeGroupConverter.Instance}, ConverterParameter={x:Static boconverter:CommonCodeTypes.AppType}}"
                               SelectedItem="{Binding Param.AppType}"/>-->
                    <!--  거래형태  -->
                    <!--<ComboBox x:Name="SupplierType"
                              Grid.Column="1"
                              Width="100"
                              Margin="12,0,0,0"
                              wpf:FocusMoveHelper.Left="{Binding ElementName=Use}"
                              wpf:FocusMoveHelper.Right="{Binding ElementName=SupplierKind}"
                              DisplayMemberPath="comm_TypeNoMemo"
                              IsReadOnly="True"
                              ItemsSource="{Binding App.Sys.CommonCodes, Converter={x:Static converter:CommonCodeGroupConverter.Instance}, ConverterParameter={x:Static boconverter:CommonCodeTypes.SupplierType}}"
                              SelectedItem="{Binding Param.SupplierType}"
                              Style="{DynamicResource App.ComboBox.Search}" />-->
                </StackPanel>
            </Border>

            <!--  ListView 영역  -->
            <Border Height="311" DockPanel.Dock="Top" BorderBrush="Blue" BorderThickness="5">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="내용" Margin="10,10,0,0" Width="25" Height="20" HorizontalAlignment="Left"/>

                    <!--  TODO : ListView 영역 안 여백(Padding) 설정 (2023.10.18 jbh) -->
                    <!--  참고 URL - https://forum.dotnetdev.kr/t/listview/5423/2  -->
                    <ListView x:Name="ParamListView"
                              ItemsSource="{Binding}">
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                            <!--  TODO : GridView 속성 "GridViewColumnHeader" 사용해서 스타일 구현 (Width = "Auto") (2023.09.22 jbh) -->
                            <!--  참고 URL - https://icodebroker.tistory.com/entry/CWPF-GridView-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8-ColumnHeaderContainerStyleColumnHeaderTemplate-%EC%86%8D%EC%84%B1-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0  -->
                            <Style x:Key="ColumnHeaderContainerStyleKey" TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Width" Value="Auto" />
                            </Style>
                        </ListView.Resources>
                        <!--  ListView - GridView 영역  -->
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource ColumnHeaderContainerStyleKey}">
                                <GridView.Columns>
                                    <GridViewColumn Header="">
                                        <GridViewColumn.CellTemplate>
                                            <!--  TODO : GridView -> GridViewColumn -> DataTemplate 영역 안에 StackPanel 구현 (하나의 셀 안에 데이터 멀티 바인딩) (2023.09.21 jbh)  -->
                                            <!--  참고 URL - https://icodebroker.tistory.com/entry/CWPF-GridViewColumn-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8-HeaderTemplateCellTemplate-%EC%86%8D%EC%84%B1-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0  -->

                                            <!--  TODO : GridView -> GridViewColumn -> DataTemplate 영역 속성 "DataType" 바인딩 대상 (예) FileView 설정 필요시 사용 예정 (2023.10.5 jbh) -->
                                            <!--  참고 URL - https://yeko90.tistory.com/entry/c-wpf-DataTemplate  -->
                                            <!--  <DataTemplate DataType="{x:Type vm:FileView}">  -->
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="카테고리">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="ID">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="레벨">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="패밀리">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="유형">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="속성 값">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--  TODO : ComboBox에 바인딩할 객체 구현 후 XAML 코드 구현 예정 (2023.10.26 jbh) -->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </StackPanel>
            </Border>

            <Border Height="60" DockPanel.Dock="Bottom" BorderBrush="Green" BorderThickness="5">
                <!--  TODO : StackPanel 영역 안에 존재하는 Button이 화면에서 짤리지 않게끔 다시 구현하기 (2023.10.10 jbh) -->
                <StackPanel Height="50" Orientation="Horizontal" HorizontalAlignment="Right">
                    <DockPanel Margin="0,5,0,5">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,20,0">
                            <CheckBox Margin="0,10,0,10" VerticalAlignment="Center" />
                            <TextBlock Text="선택 객체로 이동" FontSize="16" VerticalAlignment="Center" />
                        </StackPanel>
                        <Button Command="{Binding ExportCommand}" CommandParameter="" Margin="0,0,10,0" Width="80" Height="30">내보내기</Button>
                        <Button Command="{Binding ImportCommand}" CommandParameter="" Margin="0,0,10,0" Width="80" Height="30">가져오기</Button>
                        <Button Command="{Binding ChangeCommand}" CommandParameter="" Margin="0,0,10,0" Width="80" Height="30">일괄변경</Button>
                        <Button Command="{Binding ExitCommand}" Margin="0,0,10,0" Width="80" Height="30">종료</Button>
                    </DockPanel>
                </StackPanel>
            </Border>

            <!--<Border DockPanel.Dock="Top">
                <TextBlock Margin="10,0,0,0" Text="내용" Height="20"/>
            </Border>
            
            --><!--  화면 하단 Border 영역  --><!--
            <Border DockPanel.Dock="Top">
                <ListView/>
            </Border>

            <Border DockPanel.Dock="Bottom" Height="30">
                <Button />
            </Border>-->



            <!--<Border DockPanel.Dock="Top">
                        <StackPanel Orientation="Vertical" Margin="0,150,0,0">
                        -->
                    <!--  TODO : TextBlock 텍스트 색상 변경(Foreground="White") (2023.10.6 jbh) -->
                    <!--  참고 URL - https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=showmeii1201&logNo=90172300257  -->
                    <!--
                        <TextBlock Margin="0,0,0,0" FontSize="30" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Welcome to Seumteo!" />
                        <TextBlock Margin="0,0,0,0" FontSize="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="The function of Seumteo developed using C# WPF" />
                        
                        </StackPanel>
                    </Border>
                    <Border DockPanel.Dock="Bottom">
                        <StackPanel Orientation="Horizontal" Width="200" Margin="0,0,0,0">
                            <Button Content="Click me" Margin="0,0,0,0" Height="50" Width="100" Command="{Binding DoSomethingCommand}" CommandParameter="DoSomething" />
                            <Button Margin="0,0,0,0" Height="50" Width="100" Command="{Binding ShowMessageCommand}" CommandParameter="ShowMessage">ShowMessage</Button>
                        </StackPanel>
                    </Border>-->
                
            


        </DockPanel>
        
    </Grid>
</Window>
